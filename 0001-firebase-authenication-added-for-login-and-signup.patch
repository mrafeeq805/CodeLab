From 2b5bf55cd0bce20026a378bc0656e97b6a50a113 Mon Sep 17 00:00:00 2001
From: mrafeeqvr <muhammedrafeeq805@gmail.com>
Date: Sat, 2 Mar 2024 10:30:36 +0530
Subject: [PATCH 1/2] firebase authenication added for login and signup

---
 Client/package-lock.json                 | 692 +++++++++++++++++++++++
 Client/package.json                      |   1 +
 Client/src/components/Domains.js         |   2 +-
 Client/src/components/LatestProjects.js  |   2 +-
 Client/src/components/Login.js           | 156 +++--
 Client/src/components/PopularProjects.js |   2 +-
 Client/src/components/ProjectCardSec.js  |   6 +-
 Client/src/components/SearchBar.js       |   2 +-
 Client/src/components/Signup.js          | 181 +++---
 Client/src/components/TopDevelopers.js   |   2 +-
 Client/src/utils/appStore.js             |   4 +-
 Client/src/utils/firebase.js             |  24 +
 Client/src/utils/userSlice.js            |  20 +
 13 files changed, 956 insertions(+), 138 deletions(-)
 create mode 100644 Client/src/utils/firebase.js
 create mode 100644 Client/src/utils/userSlice.js

diff --git a/Client/package-lock.json b/Client/package-lock.json
index f4066db..21b8a14 100644
--- a/Client/package-lock.json
+++ b/Client/package-lock.json
@@ -16,6 +16,7 @@
         "bootstrap-icons": "^1.11.3",
         "draft-js": "^0.11.7",
         "draft-js-export-html": "^1.4.1",
+        "firebase": "^10.8.1",
         "quill": "^2.0.0-rc.2",
         "react": "^18.2.0",
         "react-dom": "^18.2.0",
@@ -2388,6 +2389,566 @@
         "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
       }
     },
+    "node_modules/@fastify/busboy": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/@fastify/busboy/-/busboy-2.1.1.tgz",
+      "integrity": "sha512-vBZP4NlzfOlerQTnba4aqZoMhE/a9HY7HRqoOPaETQcSQuWEIyZMHGfVu6w9wGtGK5fED5qRs2DteVCjOH60sA==",
+      "engines": {
+        "node": ">=14"
+      }
+    },
+    "node_modules/@firebase/analytics": {
+      "version": "0.10.1",
+      "resolved": "https://registry.npmjs.org/@firebase/analytics/-/analytics-0.10.1.tgz",
+      "integrity": "sha512-5mnH1aQa99J5lZMJwTNzIoRc4yGXHf+fOn+EoEWhCDA3XGPweGHcylCbqq+G1wVJmfILL57fohDMa8ftMZ+44g==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/installations": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app": "0.x"
+      }
+    },
+    "node_modules/@firebase/analytics-compat": {
+      "version": "0.2.7",
+      "resolved": "https://registry.npmjs.org/@firebase/analytics-compat/-/analytics-compat-0.2.7.tgz",
+      "integrity": "sha512-17VCly4P0VFBDqaaal7m1nhyYQwsygtaTpSsnc51sFPRrr9XIYtnD8ficon9fneEGEoJQ2g7OtASvhwX9EbK8g==",
+      "dependencies": {
+        "@firebase/analytics": "0.10.1",
+        "@firebase/analytics-types": "0.8.0",
+        "@firebase/component": "0.6.5",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app-compat": "0.x"
+      }
+    },
+    "node_modules/@firebase/analytics-types": {
+      "version": "0.8.0",
+      "resolved": "https://registry.npmjs.org/@firebase/analytics-types/-/analytics-types-0.8.0.tgz",
+      "integrity": "sha512-iRP+QKI2+oz3UAh4nPEq14CsEjrjD6a5+fuypjScisAh9kXKFvdJOZJDwk7kikLvWVLGEs9+kIUS4LPQV7VZVw=="
+    },
+    "node_modules/@firebase/app": {
+      "version": "0.9.28",
+      "resolved": "https://registry.npmjs.org/@firebase/app/-/app-0.9.28.tgz",
+      "integrity": "sha512-MS0+EtNixrwJbVDs5Bt/lhUhzeWGUtUoP6X+zYZck5GAZwI5g4F91noVA9oIXlFlpn6Q1xIbiaHA2GwGk7/7Ag==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.4",
+        "idb": "7.1.1",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/app-check": {
+      "version": "0.8.2",
+      "resolved": "https://registry.npmjs.org/@firebase/app-check/-/app-check-0.8.2.tgz",
+      "integrity": "sha512-A2B5+ldOguYAeqW1quFN5qNdruSNRrg4W59ag1Eq6QzxuHNIkrE+TrapfrW/z5NYFjCxAYqr/unVCgmk80Dwcg==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app": "0.x"
+      }
+    },
+    "node_modules/@firebase/app-check-compat": {
+      "version": "0.3.9",
+      "resolved": "https://registry.npmjs.org/@firebase/app-check-compat/-/app-check-compat-0.3.9.tgz",
+      "integrity": "sha512-7LxyupQ8XeEHRh72mO+tqm69kHT6KbWi2KtFMGedJ6tNbwzFzojcXESMKN8RpADXbYoQgY3loWMJjMx4r2Zt7w==",
+      "dependencies": {
+        "@firebase/app-check": "0.8.2",
+        "@firebase/app-check-types": "0.5.0",
+        "@firebase/component": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app-compat": "0.x"
+      }
+    },
+    "node_modules/@firebase/app-check-interop-types": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/@firebase/app-check-interop-types/-/app-check-interop-types-0.3.0.tgz",
+      "integrity": "sha512-xAxHPZPIgFXnI+vb4sbBjZcde7ZluzPPaSK7Lx3/nmuVk4TjZvnL8ONnkd4ERQKL8WePQySU+pRcWkh8rDf5Sg=="
+    },
+    "node_modules/@firebase/app-check-types": {
+      "version": "0.5.0",
+      "resolved": "https://registry.npmjs.org/@firebase/app-check-types/-/app-check-types-0.5.0.tgz",
+      "integrity": "sha512-uwSUj32Mlubybw7tedRzR24RP8M8JUVR3NPiMk3/Z4bCmgEKTlQBwMXrehDAZ2wF+TsBq0SN1c6ema71U/JPyQ=="
+    },
+    "node_modules/@firebase/app-compat": {
+      "version": "0.2.28",
+      "resolved": "https://registry.npmjs.org/@firebase/app-compat/-/app-compat-0.2.28.tgz",
+      "integrity": "sha512-Mr2NbeM1Oaayuw5unUAMzt+7/MN+e2uklT1l87D+ZLJl2UvhZAZmMt74GjEI9N3sDYKMeszSbszBqtJ1fGVafQ==",
+      "dependencies": {
+        "@firebase/app": "0.9.28",
+        "@firebase/component": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/app-types": {
+      "version": "0.9.0",
+      "resolved": "https://registry.npmjs.org/@firebase/app-types/-/app-types-0.9.0.tgz",
+      "integrity": "sha512-AeweANOIo0Mb8GiYm3xhTEBVCmPwTYAu9Hcd2qSkLuga/6+j9b1Jskl5bpiSQWy9eJ/j5pavxj6eYogmnuzm+Q=="
+    },
+    "node_modules/@firebase/auth": {
+      "version": "1.6.1",
+      "resolved": "https://registry.npmjs.org/@firebase/auth/-/auth-1.6.1.tgz",
+      "integrity": "sha512-oOuQVOxtxKr+kTTqEkkI2qXIeGbkNLpA8FzO030LF4KXmMcETqsPaIqw7Aw1Y4Zl82l1qpZtpc4vN4Da2qZdfQ==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0",
+        "undici": "5.28.3"
+      },
+      "peerDependencies": {
+        "@firebase/app": "0.x",
+        "@react-native-async-storage/async-storage": "^1.18.1"
+      },
+      "peerDependenciesMeta": {
+        "@react-native-async-storage/async-storage": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@firebase/auth-compat": {
+      "version": "0.5.3",
+      "resolved": "https://registry.npmjs.org/@firebase/auth-compat/-/auth-compat-0.5.3.tgz",
+      "integrity": "sha512-2pVtVEvu8P7SF6jSPfLPKWUClQFj+StqAZ0fD/uQ6mv8DyWn7AuuANFEu7Pv96JPcaL6Gy9jC5dFqjpptjqSRA==",
+      "dependencies": {
+        "@firebase/auth": "1.6.1",
+        "@firebase/auth-types": "0.12.0",
+        "@firebase/component": "0.6.5",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0",
+        "undici": "5.28.3"
+      },
+      "peerDependencies": {
+        "@firebase/app-compat": "0.x"
+      }
+    },
+    "node_modules/@firebase/auth-interop-types": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.2.1.tgz",
+      "integrity": "sha512-VOaGzKp65MY6P5FI84TfYKBXEPi6LmOCSMMzys6o2BN2LOsqy7pCuZCup7NYnfbk5OkkQKzvIfHOzTm0UDpkyg=="
+    },
+    "node_modules/@firebase/auth-types": {
+      "version": "0.12.0",
+      "resolved": "https://registry.npmjs.org/@firebase/auth-types/-/auth-types-0.12.0.tgz",
+      "integrity": "sha512-pPwaZt+SPOshK8xNoiQlK5XIrS97kFYc3Rc7xmy373QsOJ9MmqXxLaYssP5Kcds4wd2qK//amx/c+A8O2fVeZA==",
+      "peerDependencies": {
+        "@firebase/app-types": "0.x",
+        "@firebase/util": "1.x"
+      }
+    },
+    "node_modules/@firebase/component": {
+      "version": "0.6.5",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.5.tgz",
+      "integrity": "sha512-2tVDk1ixi12sbDmmfITK8lxSjmcb73BMF6Qwc3U44hN/J1Fi1QY/Hnnb6klFlbB9/G16a3J3d4nXykye2EADTw==",
+      "dependencies": {
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/database": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/@firebase/database/-/database-1.0.3.tgz",
+      "integrity": "sha512-9fjqLt9JzL46gw9+NRqsgQEMjgRwfd8XtzcKqG+UYyhVeFCdVRQ0Wp6Dw/dvYHnbH5vNEKzNv36dcB4p+PIAAA==",
+      "dependencies": {
+        "@firebase/app-check-interop-types": "0.3.0",
+        "@firebase/auth-interop-types": "0.2.1",
+        "@firebase/component": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.4",
+        "faye-websocket": "0.11.4",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/database-compat": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/@firebase/database-compat/-/database-compat-1.0.3.tgz",
+      "integrity": "sha512-7tHEOcMbK5jJzHWyphPux4osogH/adWwncxdMxdBpB9g1DNIyY4dcz1oJdlkXGM/i/AjUBesZsd5CuwTRTBNTw==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/database": "1.0.3",
+        "@firebase/database-types": "1.0.1",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/database-types": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/@firebase/database-types/-/database-types-1.0.1.tgz",
+      "integrity": "sha512-Tmcmx5XgiI7UVF/4oGg2P3AOTfq3WKEPsm2yf+uXtN7uG/a4WTWhVMrXGYRY2ZUL1xPxv9V33wQRJ+CcrUhVXw==",
+      "dependencies": {
+        "@firebase/app-types": "0.9.0",
+        "@firebase/util": "1.9.4"
+      }
+    },
+    "node_modules/@firebase/firestore": {
+      "version": "4.4.3",
+      "resolved": "https://registry.npmjs.org/@firebase/firestore/-/firestore-4.4.3.tgz",
+      "integrity": "sha512-Ix61zbeuTsHf0WFbk6+67n89Vzd9M8MMTdnz7c7z+BRE3BS5Vuc3gX5ZcHFjqPkQJ7rpLB1egHsYe4Przp5C2g==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.4",
+        "@firebase/webchannel-wrapper": "0.10.5",
+        "@grpc/grpc-js": "~1.9.0",
+        "@grpc/proto-loader": "^0.7.8",
+        "tslib": "^2.1.0",
+        "undici": "5.28.3"
+      },
+      "engines": {
+        "node": ">=10.10.0"
+      },
+      "peerDependencies": {
+        "@firebase/app": "0.x"
+      }
+    },
+    "node_modules/@firebase/firestore-compat": {
+      "version": "0.3.26",
+      "resolved": "https://registry.npmjs.org/@firebase/firestore-compat/-/firestore-compat-0.3.26.tgz",
+      "integrity": "sha512-dNrKiH5Cn6ItANV9nJI2Y0msKBj/skO7skDlRo/BUSQE1DKbNzumxpJEz+PK/PV1nTegnRgVvs47gpQeVWXtYQ==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/firestore": "4.4.3",
+        "@firebase/firestore-types": "3.0.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app-compat": "0.x"
+      }
+    },
+    "node_modules/@firebase/firestore-types": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/@firebase/firestore-types/-/firestore-types-3.0.0.tgz",
+      "integrity": "sha512-Meg4cIezHo9zLamw0ymFYBD4SMjLb+ZXIbuN7T7ddXN6MGoICmOTq3/ltdCGoDCS2u+H1XJs2u/cYp75jsX9Qw==",
+      "peerDependencies": {
+        "@firebase/app-types": "0.x",
+        "@firebase/util": "1.x"
+      }
+    },
+    "node_modules/@firebase/functions": {
+      "version": "0.11.2",
+      "resolved": "https://registry.npmjs.org/@firebase/functions/-/functions-0.11.2.tgz",
+      "integrity": "sha512-2NULTYOZbu0rXczwfYdqQH0w1FmmYrKjTy1YPQSHLCAkMBdfewoKmVm4Lyo2vRn0H9ZndciLY7NszKDFt9MKCQ==",
+      "dependencies": {
+        "@firebase/app-check-interop-types": "0.3.0",
+        "@firebase/auth-interop-types": "0.2.1",
+        "@firebase/component": "0.6.5",
+        "@firebase/messaging-interop-types": "0.2.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0",
+        "undici": "5.28.3"
+      },
+      "peerDependencies": {
+        "@firebase/app": "0.x"
+      }
+    },
+    "node_modules/@firebase/functions-compat": {
+      "version": "0.3.8",
+      "resolved": "https://registry.npmjs.org/@firebase/functions-compat/-/functions-compat-0.3.8.tgz",
+      "integrity": "sha512-VDHSw6UOu8RxfgAY/q8e+Jn+9Fh60Fc28yck0yfMsi2e0BiWgonIMWkFspFGGLgOJebTHl+hc+9v91rhzU6xlg==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/functions": "0.11.2",
+        "@firebase/functions-types": "0.6.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app-compat": "0.x"
+      }
+    },
+    "node_modules/@firebase/functions-types": {
+      "version": "0.6.0",
+      "resolved": "https://registry.npmjs.org/@firebase/functions-types/-/functions-types-0.6.0.tgz",
+      "integrity": "sha512-hfEw5VJtgWXIRf92ImLkgENqpL6IWpYaXVYiRkFY1jJ9+6tIhWM7IzzwbevwIIud/jaxKVdRzD7QBWfPmkwCYw=="
+    },
+    "node_modules/@firebase/installations": {
+      "version": "0.6.5",
+      "resolved": "https://registry.npmjs.org/@firebase/installations/-/installations-0.6.5.tgz",
+      "integrity": "sha512-0xxnQWw8rSRzu0ZOCkZaO+MJ0LkDAfwwTB2Z1SxRK6FAz5xkxD1ZUwM0WbCRni49PKubCrZYOJ6yg7tSjU7AKA==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/util": "1.9.4",
+        "idb": "7.1.1",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app": "0.x"
+      }
+    },
+    "node_modules/@firebase/installations-compat": {
+      "version": "0.2.5",
+      "resolved": "https://registry.npmjs.org/@firebase/installations-compat/-/installations-compat-0.2.5.tgz",
+      "integrity": "sha512-usvoIaog5CHEw082HXLrKAZ1qd4hIC3N/LDe2NqBgI3pkGE/7auLVM4Gn5gvyryp0x8z/IP1+d9fkGUj2OaGLQ==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/installations": "0.6.5",
+        "@firebase/installations-types": "0.5.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app-compat": "0.x"
+      }
+    },
+    "node_modules/@firebase/installations-types": {
+      "version": "0.5.0",
+      "resolved": "https://registry.npmjs.org/@firebase/installations-types/-/installations-types-0.5.0.tgz",
+      "integrity": "sha512-9DP+RGfzoI2jH7gY4SlzqvZ+hr7gYzPODrbzVD82Y12kScZ6ZpRg/i3j6rleto8vTFC8n6Len4560FnV1w2IRg==",
+      "peerDependencies": {
+        "@firebase/app-types": "0.x"
+      }
+    },
+    "node_modules/@firebase/logger": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.0.tgz",
+      "integrity": "sha512-eRKSeykumZ5+cJPdxxJRgAC3G5NknY2GwEbKfymdnXtnT0Ucm4pspfR6GT4MUQEDuJwRVbVcSx85kgJulMoFFA==",
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/messaging": {
+      "version": "0.12.6",
+      "resolved": "https://registry.npmjs.org/@firebase/messaging/-/messaging-0.12.6.tgz",
+      "integrity": "sha512-IORsPp9IPWq4j4yEhTOZ6GAGi3gQwGc+4yexmTAlya+qeBRSdRnJg2iIU/aj+tcKDQYr9RQuQPgHHOdFIx//vA==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/installations": "0.6.5",
+        "@firebase/messaging-interop-types": "0.2.0",
+        "@firebase/util": "1.9.4",
+        "idb": "7.1.1",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app": "0.x"
+      }
+    },
+    "node_modules/@firebase/messaging-compat": {
+      "version": "0.2.6",
+      "resolved": "https://registry.npmjs.org/@firebase/messaging-compat/-/messaging-compat-0.2.6.tgz",
+      "integrity": "sha512-Q2xC1s4L7Vpss7P7Gy6GuIS+xmJrf/vm9+gX76IK1Bo1TjoKwleCLHt1LHkPz5Rvqg5pTgzzI8qqPhBpZosFCg==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/messaging": "0.12.6",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app-compat": "0.x"
+      }
+    },
+    "node_modules/@firebase/messaging-interop-types": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/@firebase/messaging-interop-types/-/messaging-interop-types-0.2.0.tgz",
+      "integrity": "sha512-ujA8dcRuVeBixGR9CtegfpU4YmZf3Lt7QYkcj693FFannwNuZgfAYaTmbJ40dtjB81SAu6tbFPL9YLNT15KmOQ=="
+    },
+    "node_modules/@firebase/performance": {
+      "version": "0.6.5",
+      "resolved": "https://registry.npmjs.org/@firebase/performance/-/performance-0.6.5.tgz",
+      "integrity": "sha512-OzAGcWhOqEFH9GdwUuY0oC5FSlnMejcnmSAhR+EjpI7exdDvixyLyCR4txjSHYNTbumrFBG+EP8GO11CNXRaJA==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/installations": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app": "0.x"
+      }
+    },
+    "node_modules/@firebase/performance-compat": {
+      "version": "0.2.5",
+      "resolved": "https://registry.npmjs.org/@firebase/performance-compat/-/performance-compat-0.2.5.tgz",
+      "integrity": "sha512-jJwJkVyDcIMBaVGrZ6CRGs4m5FCZsWB5QCWYI3FdsHyIa9/TfteNDilxj9wGciF2naFIHDW7TgE69U5dAH9Ktg==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/performance": "0.6.5",
+        "@firebase/performance-types": "0.2.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app-compat": "0.x"
+      }
+    },
+    "node_modules/@firebase/performance-types": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/@firebase/performance-types/-/performance-types-0.2.0.tgz",
+      "integrity": "sha512-kYrbr8e/CYr1KLrLYZZt2noNnf+pRwDq2KK9Au9jHrBMnb0/C9X9yWSXmZkFt4UIdsQknBq8uBB7fsybZdOBTA=="
+    },
+    "node_modules/@firebase/remote-config": {
+      "version": "0.4.5",
+      "resolved": "https://registry.npmjs.org/@firebase/remote-config/-/remote-config-0.4.5.tgz",
+      "integrity": "sha512-rGLqc/4OmxrS39RA9kgwa6JmgWytQuMo+B8pFhmGp3d++x2Hf9j+MLQfhOLyyUo64fNw20J19mLXhrXvKHsjZQ==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/installations": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app": "0.x"
+      }
+    },
+    "node_modules/@firebase/remote-config-compat": {
+      "version": "0.2.5",
+      "resolved": "https://registry.npmjs.org/@firebase/remote-config-compat/-/remote-config-compat-0.2.5.tgz",
+      "integrity": "sha512-ImkNnLuGrD/bylBHDJigSY6LMwRrwt37wQbsGZhWG4QQ6KLzHzSf0nnFRRFvkOZodEUE57Ib8l74d6Yn/6TDUQ==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/logger": "0.4.0",
+        "@firebase/remote-config": "0.4.5",
+        "@firebase/remote-config-types": "0.3.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app-compat": "0.x"
+      }
+    },
+    "node_modules/@firebase/remote-config-types": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/@firebase/remote-config-types/-/remote-config-types-0.3.0.tgz",
+      "integrity": "sha512-RtEH4vdcbXZuZWRZbIRmQVBNsE7VDQpet2qFvq6vwKLBIQRQR5Kh58M4ok3A3US8Sr3rubYnaGqZSurCwI8uMA=="
+    },
+    "node_modules/@firebase/storage": {
+      "version": "0.12.2",
+      "resolved": "https://registry.npmjs.org/@firebase/storage/-/storage-0.12.2.tgz",
+      "integrity": "sha512-MzanOBcxDx9oOwDaDPMuiYxd6CxcN1xZm+os5uNE3C1itbRKLhM9rzpODDKWzcbnHHFtXk3Q3lsK/d3Xa1WYYw==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0",
+        "undici": "5.28.3"
+      },
+      "peerDependencies": {
+        "@firebase/app": "0.x"
+      }
+    },
+    "node_modules/@firebase/storage-compat": {
+      "version": "0.3.5",
+      "resolved": "https://registry.npmjs.org/@firebase/storage-compat/-/storage-compat-0.3.5.tgz",
+      "integrity": "sha512-5dJXfY5NxCF5NAk4dLvJqC+m6cgcf0Fr29nrMHwhwI34pBheQq2PdRZqALsqZCES9dnHTuFNlqGQDpLr+Ph4rw==",
+      "dependencies": {
+        "@firebase/component": "0.6.5",
+        "@firebase/storage": "0.12.2",
+        "@firebase/storage-types": "0.8.0",
+        "@firebase/util": "1.9.4",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app-compat": "0.x"
+      }
+    },
+    "node_modules/@firebase/storage-types": {
+      "version": "0.8.0",
+      "resolved": "https://registry.npmjs.org/@firebase/storage-types/-/storage-types-0.8.0.tgz",
+      "integrity": "sha512-isRHcGrTs9kITJC0AVehHfpraWFui39MPaU7Eo8QfWlqW7YPymBmRgjDrlOgFdURh6Cdeg07zmkLP5tzTKRSpg==",
+      "peerDependencies": {
+        "@firebase/app-types": "0.x",
+        "@firebase/util": "1.x"
+      }
+    },
+    "node_modules/@firebase/util": {
+      "version": "1.9.4",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.4.tgz",
+      "integrity": "sha512-WLonYmS1FGHT97TsUmRN3qnTh5TeeoJp1Gg5fithzuAgdZOUtsYECfy7/noQ3llaguios8r5BuXSEiK82+UrxQ==",
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/webchannel-wrapper": {
+      "version": "0.10.5",
+      "resolved": "https://registry.npmjs.org/@firebase/webchannel-wrapper/-/webchannel-wrapper-0.10.5.tgz",
+      "integrity": "sha512-eSkJsnhBWv5kCTSU1tSUVl9mpFu+5NXXunZc83le8GMjMlsWwQArSc7cJJ4yl+aDFY0NGLi0AjZWMn1axOrkRg=="
+    },
+    "node_modules/@grpc/grpc-js": {
+      "version": "1.9.14",
+      "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.9.14.tgz",
+      "integrity": "sha512-nOpuzZ2G3IuMFN+UPPpKrC6NsLmWsTqSsm66IRfnBt1D4pwTqE27lmbpcPM+l2Ua4gE7PfjRHI6uedAy7hoXUw==",
+      "dependencies": {
+        "@grpc/proto-loader": "^0.7.8",
+        "@types/node": ">=12.12.47"
+      },
+      "engines": {
+        "node": "^8.13.0 || >=10.10.0"
+      }
+    },
+    "node_modules/@grpc/proto-loader": {
+      "version": "0.7.10",
+      "resolved": "https://registry.npmjs.org/@grpc/proto-loader/-/proto-loader-0.7.10.tgz",
+      "integrity": "sha512-CAqDfoaQ8ykFd9zqBDn4k6iWT9loLAlc2ETmDFS9JCD70gDcnA4L3AFEo2iV7KyAtAAHFW9ftq1Fz+Vsgq80RQ==",
+      "dependencies": {
+        "lodash.camelcase": "^4.3.0",
+        "long": "^5.0.0",
+        "protobufjs": "^7.2.4",
+        "yargs": "^17.7.2"
+      },
+      "bin": {
+        "proto-loader-gen-types": "build/bin/proto-loader-gen-types.js"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/@grpc/proto-loader/node_modules/cliui": {
+      "version": "8.0.1",
+      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
+      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
+      "dependencies": {
+        "string-width": "^4.2.0",
+        "strip-ansi": "^6.0.1",
+        "wrap-ansi": "^7.0.0"
+      },
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@grpc/proto-loader/node_modules/yargs": {
+      "version": "17.7.2",
+      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
+      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
+      "dependencies": {
+        "cliui": "^8.0.1",
+        "escalade": "^3.1.1",
+        "get-caller-file": "^2.0.5",
+        "require-directory": "^2.1.1",
+        "string-width": "^4.2.3",
+        "y18n": "^5.0.5",
+        "yargs-parser": "^21.1.1"
+      },
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@grpc/proto-loader/node_modules/yargs-parser": {
+      "version": "21.1.1",
+      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
+      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
+      "engines": {
+        "node": ">=12"
+      }
+    },
     "node_modules/@humanwhocodes/config-array": {
       "version": "0.11.14",
       "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.14.tgz",
@@ -3364,6 +3925,60 @@
         }
       }
     },
+    "node_modules/@protobufjs/aspromise": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/@protobufjs/aspromise/-/aspromise-1.1.2.tgz",
+      "integrity": "sha512-j+gKExEuLmKwvz3OgROXtrJ2UG2x8Ch2YZUxahh+s1F2HZ+wAceUNLkvy6zKCPVRkU++ZWQrdxsUeQXmcg4uoQ=="
+    },
+    "node_modules/@protobufjs/base64": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/@protobufjs/base64/-/base64-1.1.2.tgz",
+      "integrity": "sha512-AZkcAA5vnN/v4PDqKyMR5lx7hZttPDgClv83E//FMNhR2TMcLUhfRUBHCmSl0oi9zMgDDqRUJkSxO3wm85+XLg=="
+    },
+    "node_modules/@protobufjs/codegen": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/@protobufjs/codegen/-/codegen-2.0.4.tgz",
+      "integrity": "sha512-YyFaikqM5sH0ziFZCN3xDC7zeGaB/d0IUb9CATugHWbd1FRFwWwt4ld4OYMPWu5a3Xe01mGAULCdqhMlPl29Jg=="
+    },
+    "node_modules/@protobufjs/eventemitter": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/@protobufjs/eventemitter/-/eventemitter-1.1.0.tgz",
+      "integrity": "sha512-j9ednRT81vYJ9OfVuXG6ERSTdEL1xVsNgqpkxMsbIabzSo3goCjDIveeGv5d03om39ML71RdmrGNjG5SReBP/Q=="
+    },
+    "node_modules/@protobufjs/fetch": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/@protobufjs/fetch/-/fetch-1.1.0.tgz",
+      "integrity": "sha512-lljVXpqXebpsijW71PZaCYeIcE5on1w5DlQy5WH6GLbFryLUrBD4932W/E2BSpfRJWseIL4v/KPgBFxDOIdKpQ==",
+      "dependencies": {
+        "@protobufjs/aspromise": "^1.1.1",
+        "@protobufjs/inquire": "^1.1.0"
+      }
+    },
+    "node_modules/@protobufjs/float": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/@protobufjs/float/-/float-1.0.2.tgz",
+      "integrity": "sha512-Ddb+kVXlXst9d+R9PfTIxh1EdNkgoRe5tOX6t01f1lYWOvJnSPDBlG241QLzcyPdoNTsblLUdujGSE4RzrTZGQ=="
+    },
+    "node_modules/@protobufjs/inquire": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/@protobufjs/inquire/-/inquire-1.1.0.tgz",
+      "integrity": "sha512-kdSefcPdruJiFMVSbn801t4vFK7KB/5gd2fYvrxhuJYg8ILrmn9SKSX2tZdV6V+ksulWqS7aXjBcRXl3wHoD9Q=="
+    },
+    "node_modules/@protobufjs/path": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/@protobufjs/path/-/path-1.1.2.tgz",
+      "integrity": "sha512-6JOcJ5Tm08dOHAbdR3GrvP+yUUfkjG5ePsHYczMFLq3ZmMkAD98cDgcT2iA1lJ9NVwFd4tH/iSSoe44YWkltEA=="
+    },
+    "node_modules/@protobufjs/pool": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/@protobufjs/pool/-/pool-1.1.0.tgz",
+      "integrity": "sha512-0kELaGSIDBKvcgS4zkjz1PeddatrjYcmMWOlAuAPwAeccUrPHdUqo/J6LiymHHEiJT5NrF1UVwxY14f+fy4WQw=="
+    },
+    "node_modules/@protobufjs/utf8": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/@protobufjs/utf8/-/utf8-1.1.0.tgz",
+      "integrity": "sha512-Vvn3zZrhQZkkBE8LSuW3em98c0FwgO4nxzv6OdSxPKJIEKY2bGbHn+mhGIPerzI4twdxaP8/0+06HBpwf345Lw=="
+    },
     "node_modules/@reduxjs/toolkit": {
       "version": "2.2.1",
       "resolved": "https://registry.npmjs.org/@reduxjs/toolkit/-/toolkit-2.2.1.tgz",
@@ -8669,6 +9284,39 @@
         "url": "https://github.com/sponsors/sindresorhus"
       }
     },
+    "node_modules/firebase": {
+      "version": "10.8.1",
+      "resolved": "https://registry.npmjs.org/firebase/-/firebase-10.8.1.tgz",
+      "integrity": "sha512-4B2jzhU/aumfKL446MG41/T5+t+9d9urf5XGrjC0HRQUm4Ya/amV48HBchnje69ExaJP5f2WxO9OX3wh9ee4wA==",
+      "dependencies": {
+        "@firebase/analytics": "0.10.1",
+        "@firebase/analytics-compat": "0.2.7",
+        "@firebase/app": "0.9.28",
+        "@firebase/app-check": "0.8.2",
+        "@firebase/app-check-compat": "0.3.9",
+        "@firebase/app-compat": "0.2.28",
+        "@firebase/app-types": "0.9.0",
+        "@firebase/auth": "1.6.1",
+        "@firebase/auth-compat": "0.5.3",
+        "@firebase/database": "1.0.3",
+        "@firebase/database-compat": "1.0.3",
+        "@firebase/firestore": "4.4.3",
+        "@firebase/firestore-compat": "0.3.26",
+        "@firebase/functions": "0.11.2",
+        "@firebase/functions-compat": "0.3.8",
+        "@firebase/installations": "0.6.5",
+        "@firebase/installations-compat": "0.2.5",
+        "@firebase/messaging": "0.12.6",
+        "@firebase/messaging-compat": "0.2.6",
+        "@firebase/performance": "0.6.5",
+        "@firebase/performance-compat": "0.2.5",
+        "@firebase/remote-config": "0.4.5",
+        "@firebase/remote-config-compat": "0.2.5",
+        "@firebase/storage": "0.12.2",
+        "@firebase/storage-compat": "0.3.5",
+        "@firebase/util": "1.9.4"
+      }
+    },
     "node_modules/flat-cache": {
       "version": "3.2.0",
       "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz",
@@ -12564,6 +13212,11 @@
       "resolved": "https://registry.npmjs.org/lodash-es/-/lodash-es-4.17.21.tgz",
       "integrity": "sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw=="
     },
+    "node_modules/lodash.camelcase": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/lodash.camelcase/-/lodash.camelcase-4.3.0.tgz",
+      "integrity": "sha512-TwuEnCnxbc3rAvhf/LbG7tJUDzhqXyFnv3dtzLOPgCG/hODL7WFnsbwktkD7yUV0RrreP/l1PALq/YSg6VvjlA=="
+    },
     "node_modules/lodash.clonedeep": {
       "version": "4.5.0",
       "resolved": "https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz",
@@ -12599,6 +13252,11 @@
       "resolved": "https://registry.npmjs.org/lodash.uniq/-/lodash.uniq-4.5.0.tgz",
       "integrity": "sha512-xfBaXQd9ryd9dlSDvnvI0lvxfLJlYAZzXomUYzLKtUeOQvOP5piqAWuGtrhWeqaXK9hhoM/iyJc5AV+XfsX3HQ=="
     },
+    "node_modules/long": {
+      "version": "5.2.3",
+      "resolved": "https://registry.npmjs.org/long/-/long-5.2.3.tgz",
+      "integrity": "sha512-lcHwpNoggQTObv5apGNCTdJrO69eHOZMi4BNC+rTLER8iHAqGrUVeLh/irVIM7zTw2bOXA8T6uNPeujwOLg/2Q=="
+    },
     "node_modules/loose-envify": {
       "version": "1.4.0",
       "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
@@ -14942,6 +15600,29 @@
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
       "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
     },
+    "node_modules/protobufjs": {
+      "version": "7.2.6",
+      "resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-7.2.6.tgz",
+      "integrity": "sha512-dgJaEDDL6x8ASUZ1YqWciTRrdOuYNzoOf27oHNfdyvKqHr5i0FV7FSLU+aIeFjyFgVxrpTOtQUi0BLLBymZaBw==",
+      "hasInstallScript": true,
+      "dependencies": {
+        "@protobufjs/aspromise": "^1.1.2",
+        "@protobufjs/base64": "^1.1.2",
+        "@protobufjs/codegen": "^2.0.4",
+        "@protobufjs/eventemitter": "^1.1.0",
+        "@protobufjs/fetch": "^1.1.0",
+        "@protobufjs/float": "^1.0.2",
+        "@protobufjs/inquire": "^1.1.0",
+        "@protobufjs/path": "^1.1.2",
+        "@protobufjs/pool": "^1.1.0",
+        "@protobufjs/utf8": "^1.1.0",
+        "@types/node": ">=13.7.0",
+        "long": "^5.0.0"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      }
+    },
     "node_modules/proxy-addr": {
       "version": "2.0.7",
       "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
@@ -17563,6 +18244,17 @@
       "resolved": "https://registry.npmjs.org/underscore/-/underscore-1.12.1.tgz",
       "integrity": "sha512-hEQt0+ZLDVUMhebKxL4x1BTtDY7bavVofhZ9KZ4aI26X9SRaE+Y3m83XUL1UP2jn8ynjndwCCpEHdUG+9pP1Tw=="
     },
+    "node_modules/undici": {
+      "version": "5.28.3",
+      "resolved": "https://registry.npmjs.org/undici/-/undici-5.28.3.tgz",
+      "integrity": "sha512-3ItfzbrhDlINjaP0duwnNsKpDQk3acHI3gVJ1z4fmwMK31k5G9OVIAMLSIaP6w4FaGkaAkN6zaQO9LUvZ1t7VA==",
+      "dependencies": {
+        "@fastify/busboy": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=14.0"
+      }
+    },
     "node_modules/undici-types": {
       "version": "5.26.5",
       "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz",
diff --git a/Client/package.json b/Client/package.json
index 8c7530c..d6ead01 100644
--- a/Client/package.json
+++ b/Client/package.json
@@ -12,6 +12,7 @@
     "bootstrap-icons": "^1.11.3",
     "draft-js": "^0.11.7",
     "draft-js-export-html": "^1.4.1",
+    "firebase": "^10.8.1",
     "quill": "^2.0.0-rc.2",
     "react": "^18.2.0",
     "react-dom": "^18.2.0",
diff --git a/Client/src/components/Domains.js b/Client/src/components/Domains.js
index fbc8cc0..c486e22 100644
--- a/Client/src/components/Domains.js
+++ b/Client/src/components/Domains.js
@@ -11,7 +11,7 @@ export const Domains = () => {
             </div>
             
             <div className='mt-3 grid grid-cols-5 gap-3'>
-                {list.map(item => <DomainCard name={"Akshay"} img={"/img/dev.png"}/>)}
+                {list.map((item,index) => <DomainCard key={index} name={"Akshay"} img={"/img/dev.png"}/>)}
             </div>
         </div>
     )
diff --git a/Client/src/components/LatestProjects.js b/Client/src/components/LatestProjects.js
index a69f8fb..95be06d 100644
--- a/Client/src/components/LatestProjects.js
+++ b/Client/src/components/LatestProjects.js
@@ -13,7 +13,7 @@ const LatestProjects = () => {
             </div>
             
             {list && (<div className='mt-3 grid grid-col-5 grid-flow-row gap-2'>
-                {list?.map(item => <ProjectCardSec key={item.name} data={item}/>)}
+                {list?.map((item,index) => <ProjectCardSec key={index} data={item}/>)}
             </div>)}
         </div>
     )
diff --git a/Client/src/components/Login.js b/Client/src/components/Login.js
index b004cc4..32e9671 100644
--- a/Client/src/components/Login.js
+++ b/Client/src/components/Login.js
@@ -1,63 +1,101 @@
-import React, { useRef, useState } from 'react'
-import LoginIntro from './LoginIntro'
-import {useNavigate} from 'react-router-dom'
-import axios from 'axios'
+import React, { useRef, useState } from "react";
+import LoginIntro from "./LoginIntro";
+import { useNavigate } from "react-router-dom";
+import axios from "axios";
+import { signInWithEmailAndPassword } from "firebase/auth";
+import { auth } from "../utils/firebase";
+import {useDispatch} from "react-redux"
+import { addUser } from "../utils/userSlice";
 
 const Login = () => {
-    const [loginError,setLoginError] = useState(null)
-    const [passwordValue,setPasswordValue] = useState(true)
-    const navigate = useNavigate()
-    const email = useRef(null)
-    const password = useRef(null)
-    const handlerSignup = () =>{
-        navigate('/signup')
-    }
-    const togglePassword = () =>{
-        setPasswordValue(!passwordValue)
-    }
-    const formHandler = async (e) =>{
-        e.preventDefault()
-        const formData =  {
-            email : email.current.value,
-            password : password.current.value
-        }
-        await axios.post('/login',formData)
-        .then((r) => {
-            if(r.data.result === 'success'){
-                navigate('/')
-            }else{
-                setLoginError(r.data.result)
-            }
-            
-        })
+    const dispatch = useDispatch()
+	const [loginError, setLoginError] = useState(null);
+	const [passwordValue, setPasswordValue] = useState(true);
+	const navigate = useNavigate();
+	const email = useRef(null);
+	const password = useRef(null);
+	const handlerSignup = () => {
+		navigate("/signup");
+	};
+	const togglePassword = () => {
+		setPasswordValue(!passwordValue);
+	};
+	const formHandler = async (e) => {
+		e.preventDefault();
+		const formData = {
+			email: email.current.value,
+			password: password.current.value,
+		};
+		await axios.post("/login", formData).then((r) => {
+			if (r.data.result === "success") {
 
-    }
-  return (
-    <div >
-        <LoginIntro title={"User Signin"} info={"Please fill your detail to access your account."}/>
-        <div className='mt-4 px-4'>
-            <form className='' onSubmit={formHandler}>
-                <label className='text-login font-medium '>Email</label>
-                <div className='border-2 rounded-lg flex justify-between p-2 my-3'>
-                    <input className='w-full text-login_light outline-none' type='text' ref={email}/>
-                   
-                </div>
-                <label className='text-login font-medium'>Password</label>
-                <div className='border-2 rounded-lg flex justify-between p-2 my-3'>
-                    <input className='w-full text-login_light outline-none' type={passwordValue ? 'password' : 'text'} ref={password}/>
-                    <i onClick={togglePassword} class={passwordValue ? "bi bi-eye-slash text-login_light text-lg" : "bi bi-eye text-login_light text-lg"}></i>
-                </div>
-                {loginError && <span className='text-red-500 text-xs'>{loginError}</span>}
-                <button className='bg-primary p-2 w-full rounded-lg text-xl text-white py-3 mt-5'>
-                     Signin
-                </button>
-                <div className='flex justify-center py-5'>
-                    <span className='text-login_light text-'>Don’t have an account ? <span onClick={handlerSignup} className='text-primary font-medium'>Signup</span></span>
-                </div>
-            </form>
-        </div>
-    </div>
-  )
-}
+				signInWithEmailAndPassword(auth, email.current.value, password.current.value)
+					.then((userCredential) => {
+						const user = userCredential.user;
+                        dispatch(addUser(user))
+                        navigate("/");
+					})
+					.catch((error) => {
+                        setLoginError(error)
+					});
 
-export default Login
\ No newline at end of file
+				
+			} else {
+				setLoginError(r.data.result);
+			}
+		});
+	};
+	return (
+		<div>
+			<LoginIntro
+				title={"User Signin"}
+				info={"Please fill your detail to access your account."}
+			/>
+			<div className="mt-4 px-4">
+				<form className="" onSubmit={formHandler}>
+					<label className="text-login font-medium ">Email</label>
+					<div className="border-2 rounded-lg flex justify-between p-2 my-3">
+						<input
+							className="w-full text-login_light outline-none"
+							type="text"
+							ref={email}
+						/>
+					</div>
+					<label className="text-login font-medium">Password</label>
+					<div className="border-2 rounded-lg flex justify-between p-2 my-3">
+						<input
+							className="w-full text-login_light outline-none"
+							type={passwordValue ? "password" : "text"}
+							ref={password}
+						/>
+						<i
+							onClick={togglePassword}
+							class={
+								passwordValue
+									? "bi bi-eye-slash text-login_light text-lg"
+									: "bi bi-eye text-login_light text-lg"
+							}></i>
+					</div>
+					{loginError && (
+						<span className="text-red-500 text-xs">{loginError}</span>
+					)}
+					<button className="bg-primary p-2 w-full rounded-lg text-xl text-white py-3 mt-5">
+						Signin
+					</button>
+					<div className="flex justify-center py-5">
+						<span className="text-login_light text-">
+							Don’t have an account ?{" "}
+							<span
+								onClick={handlerSignup}
+								className="text-primary font-medium">
+								Signup
+							</span>
+						</span>
+					</div>
+				</form>
+			</div>
+		</div>
+	);
+};
+
+export default Login;
diff --git a/Client/src/components/PopularProjects.js b/Client/src/components/PopularProjects.js
index 8ed52c9..e69b180 100644
--- a/Client/src/components/PopularProjects.js
+++ b/Client/src/components/PopularProjects.js
@@ -12,7 +12,7 @@ const PopularProjects = () => {
             </div>
             
             {list && (<div className='mt-3 grid grid-col-5 grid-flow-row gap-2'>
-                {list?.map(item => <ProjectCardSec key={item.name} data={item}/>)}
+                {list?.map((item,index) => <ProjectCardSec key={index} data={item}/>)}
             </div>)}
         </div>
     )
diff --git a/Client/src/components/ProjectCardSec.js b/Client/src/components/ProjectCardSec.js
index 360289b..ee2d3a0 100644
--- a/Client/src/components/ProjectCardSec.js
+++ b/Client/src/components/ProjectCardSec.js
@@ -21,15 +21,15 @@ const ProjectCardSec = (props) => {
 					<span className="text-sm text-gray-400">{publisher}</span>
 					<div className="flex justify-between w-full gap-8">
 						<div className="flex gap-2 items-center">
-							<i class="bi bi-eye-fill text-gray-400"></i>
+							<i className="bi bi-eye-fill text-gray-400"></i>
 							<span className="text-xs text-gray-400">{views}</span>
 						</div>
 						<div className="flex gap-2 items-center">
-							<i class="bi bi-arrow-down-circle text-gray-400"></i>
+							<i className="bi bi-arrow-down-circle text-gray-400"></i>
 							<span className="text-xs text-gray-400">{downloads}</span>
 						</div>
 						<div className="flex gap-2 items-center">
-							<i class="bi bi-clock-fill text-gray-400"></i>
+							<i className="bi bi-clock-fill text-gray-400"></i>
 							<span className="text-xs text-gray-400">{published_date} </span>
 						</div>
 					</div>
diff --git a/Client/src/components/SearchBar.js b/Client/src/components/SearchBar.js
index d7f03ab..8c077e4 100644
--- a/Client/src/components/SearchBar.js
+++ b/Client/src/components/SearchBar.js
@@ -5,7 +5,7 @@ const SearchBar = ({title}) => {
 		<div className="p-2 my-2">
 			<div className="rounded-lg border-2 p-2 px-4 flex justify-between">
 				<input type="text" placeholder={title} />
-                <i class="bi bi-search text-gray-500"></i>
+                <i className="bi bi-search text-gray-500"></i>
 			</div>
 		</div>
 	);
diff --git a/Client/src/components/Signup.js b/Client/src/components/Signup.js
index 0b76b59..a8fef2b 100644
--- a/Client/src/components/Signup.js
+++ b/Client/src/components/Signup.js
@@ -1,74 +1,115 @@
-import React, { useRef, useState } from 'react'
-import LoginIntro from './LoginIntro'
-import { useNavigate } from 'react-router-dom'
-import axios from "axios"
+import React, { useRef, useState} from "react";
+import LoginIntro from "./LoginIntro";
+import { useNavigate } from "react-router-dom";
+import axios from "axios";
+import { createUserWithEmailAndPassword } from "firebase/auth";
+import { auth } from "../utils/firebase";
+import { addUser } from "../utils/userSlice";
+import { useDispatch } from "react-redux"
 
 const Signup = () => {
-    const [signupError,setSignupError] = useState(null)
-    const [passwordValue,setPasswordValue] = useState(true)
-    const name = useRef(null)
-    const email = useRef(null)
-    const password = useRef(null)
-    const navigate = useNavigate()
-    const handlerLogin = () =>{
-        navigate('/login')
-    }
-    const togglePassword = () =>{
-        setPasswordValue(!passwordValue)
-    }
-    const onHandleForm =  async (e) =>{
-        e.preventDefault()
-        const formData ={
-            name : name.current.value,
-            email : email.current.value,
-            password : password.current.value
-        }
-        await axios.post('/createaccount',formData)
-        .then((r) =>{
-            if(r.data.result === "success"){
-                navigate('/')
-            }else{
-                
-            }
-            
-        })
-        .catch((err) => {
-            setSignupError(err)
-        })
+	const [signupError, setSignupError] = useState(null);
+	const [passwordValue, setPasswordValue] = useState(true);
+    const dispatch = useDispatch()
+	const name = useRef(null);
+	const email = useRef(null);
+	const password = useRef(null);
+	const navigate = useNavigate();
+	const handlerLogin = () => {
+		navigate("/login");
+	};
+	const togglePassword = () => {
+		setPasswordValue(!passwordValue);
+	};
+	const onHandleForm = async (e) => {
+		e.preventDefault();
+		const formData = {
+			name: name.current.value,
+			email: email.current.value,
+			password: password.current.value,
+		};
+		await axios
+			.post("/createaccount", formData)
+			.then((r) => {
+				if (r.data.result === "success") {
+					createUserWithEmailAndPassword(auth, email.current.value, password.current.value)
+						.then((userCredential) => {
+							const user = userCredential.user;
+                            dispatch(addUser(user))
+                            navigate("/");
+						})
+						.catch((error) => {
+							const errorCode = error.code;
+                            console.log(error);
+							
+						});
 
-    }   
-  return (
-    
-    <div >
-        <LoginIntro title={"User Signup"} info={"Please fill your detail to create your account."}/>
-        <div className='mt-4 px-4'>
-            <form className='' onSubmit={onHandleForm}>
-                <label className='text-login font-medium'>Full Name</label>
-                <div className='border-2 rounded-lg flex justify-between p-2 my-3'>
-                    <input className='w-full text-login_light outline-none' type='text' ref={name}/>
-                   
-                </div>
-                <label className='text-login font-medium '>Email</label>
-                <div className='border-2 rounded-lg flex justify-between p-2 my-3'>
-                    <input className='w-full text-login_light outline-none' type='text' ref={email}/>
-                   
-                </div>
-                <label className='text-login font-medium'>Password</label>
-                <div className='border-2 rounded-lg flex justify-between p-2 my-3'>
-                    <input className='w-full text-login_light outline-none' type={passwordValue ? 'password' :'text'} ref={password} />
-                    <i className={passwordValue ? "bi bi-eye-slash text-login_light text-lg":"bi bi-eye text-login_light text-lg"} onClick={togglePassword}></i>
-                </div>
-                <button className='bg-primary p-2 w-full rounded-lg text-xl text-white py-3 mt-5'>
-                     Signup
-                </button>
-                {signupError && <span className='text-red-500 text-xs'>{signupError}</span>}
-                <div className='flex justify-center py-5'>
-                    <span className='text-login_light text-'>Already have an account ? <span onClick={handlerLogin} className='text-primary font-medium'>Log in</span></span>
-                </div>
-            </form>
-        </div>
-    </div>
-  )
-}
+					
+				} else {
+					setSignupError(r.data.result);
+				}
+			})
+			.catch((err) => {
+				setSignupError(err);
+			});
+	};
+	return (
+		<div>
+			<LoginIntro
+				title={"User Signup"}
+				info={"Please fill your detail to create your account."}
+			/>
+			<div className="mt-4 px-4">
+				<form className="" onSubmit={onHandleForm}>
+					<label className="text-login font-medium">Full Name</label>
+					<div className="border-2 rounded-lg flex justify-between p-2 my-3">
+						<input
+							className="w-full text-login_light outline-none"
+							type="text"
+							ref={name}
+						/>
+					</div>
+					<label className="text-login font-medium ">Email</label>
+					<div className="border-2 rounded-lg flex justify-between p-2 my-3">
+						<input
+							className="w-full text-login_light outline-none"
+							type="text"
+							ref={email}
+						/>
+					</div>
+					<label className="text-login font-medium">Password</label>
+					<div className="border-2 rounded-lg flex justify-between p-2 my-3">
+						<input
+							className="w-full text-login_light outline-none"
+							type={passwordValue ? "password" : "text"}
+							ref={password}
+						/>
+						<i
+							className={
+								passwordValue
+									? "bi bi-eye-slash text-login_light text-lg"
+									: "bi bi-eye text-login_light text-lg"
+							}
+							onClick={togglePassword}></i>
+					</div>
+					<button className="bg-primary p-2 w-full rounded-lg text-xl text-white py-3 mt-5">
+						Signup
+					</button>
+					{signupError && (
+						<span className="text-red-500 text-xs">{signupError}</span>
+					)}
+					<div className="flex justify-center py-5">
+						<span className="text-login_light text-">
+							Already have an account ?{" "}
+							<span onClick={handlerLogin} className="text-primary font-medium">
+								Log in
+							</span>
+						</span>
+					</div>
+				</form>
+			</div>
+		</div>
+	);
+};
 
-export default Signup
\ No newline at end of file
+export default Signup;
diff --git a/Client/src/components/TopDevelopers.js b/Client/src/components/TopDevelopers.js
index db2d887..5a48445 100644
--- a/Client/src/components/TopDevelopers.js
+++ b/Client/src/components/TopDevelopers.js
@@ -8,7 +8,7 @@ const TopDevelopers = () => {
     <div className='px-2'>
         <span className='font-medium'>Top Developers</span>
         <div className='mt-3 grid grid-cols-5 grid-flow-col'>
-            {list?.map(item => <DeveloperCard key={item.id} name={item.name} avatar={item.avatar}/>)}
+            {list?.map((item,index) => <DeveloperCard key={index} name={item.name} avatar={item.avatar}/>)}
         </div>
     </div>
   )
diff --git a/Client/src/utils/appStore.js b/Client/src/utils/appStore.js
index c219de5..db18577 100644
--- a/Client/src/utils/appStore.js
+++ b/Client/src/utils/appStore.js
@@ -1,12 +1,14 @@
 import { configureStore } from "@reduxjs/toolkit";
 import featureSlice from "./featureSlice";
 import projectSlice from "./projectSlice";
+import userSlice from "./userSlice";
 
 const appStore = configureStore(
     {
         reducer : {
             feature : featureSlice,
-            project : projectSlice
+            project : projectSlice,
+            user : userSlice
         }
     }
 )
diff --git a/Client/src/utils/firebase.js b/Client/src/utils/firebase.js
new file mode 100644
index 0000000..1612bb2
--- /dev/null
+++ b/Client/src/utils/firebase.js
@@ -0,0 +1,24 @@
+// Import the functions you need from the SDKs you need
+import { initializeApp } from "firebase/app";
+import { getAuth } from "firebase/auth";
+
+// TODO: Add SDKs for Firebase products that you want to use
+// https://firebase.google.com/docs/web/setup#available-libraries
+// Your web app's Firebase configuration
+
+const firebaseConfig = {
+    apiKey: "AIzaSyCtvC3uDcF6gaftbArQBpzvOZGSbpEfFL4",
+    authDomain: "codelab-95a3d.firebaseapp.com",
+    projectId: "codelab-95a3d",
+    storageBucket: "codelab-95a3d.appspot.com",
+    messagingSenderId: "109412438316",
+    appId: "1:109412438316:web:b4b6acec0e7062599e9c89",
+    measurementId: "G-TKNFEJ7WHE"
+  };
+ 
+// Initialize Firebase
+const app = initializeApp(firebaseConfig);
+
+// Initialize Firebase Authentication and get a reference to the service
+export const auth = getAuth(app);
+export default app;
\ No newline at end of file
diff --git a/Client/src/utils/userSlice.js b/Client/src/utils/userSlice.js
new file mode 100644
index 0000000..4eae881
--- /dev/null
+++ b/Client/src/utils/userSlice.js
@@ -0,0 +1,20 @@
+import { createSlice } from "@reduxjs/toolkit";
+
+const userSlice = createSlice({
+    name : "user",
+    initialState : {
+        user : null,
+    },
+    reducers : {
+        addUser : (state,action) =>{
+            state.user= action.payload
+        },
+        removeUser : (state,action) =>{
+            state.user = null
+        },
+    }
+})
+
+export default userSlice.reducer
+
+export const {addUser,removeUser} = userSlice.actions
\ No newline at end of file
-- 
2.42.0.windows.2

